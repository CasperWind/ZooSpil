// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ZooContext))]
    [Migration("20201105203927_nyigen")]
    partial class nyigen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Entitys.Dyr", b =>
                {
                    b.Property<int>("DyrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pris")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DyrId");

                    b.ToTable("Dyrs");

                    b.HasData(
                        new
                        {
                            DyrId = 1,
                            Navn = "🐊",
                            Pris = 10000m
                        },
                        new
                        {
                            DyrId = 2,
                            Navn = "🦁",
                            Pris = 10000m
                        },
                        new
                        {
                            DyrId = 3,
                            Navn = "🐘",
                            Pris = 10000m
                        },
                        new
                        {
                            DyrId = 4,
                            Navn = "🐧",
                            Pris = 10000m
                        },
                        new
                        {
                            DyrId = 5,
                            Navn = "🐉",
                            Pris = 10000m
                        },
                        new
                        {
                            DyrId = 6,
                            Navn = "🐯",
                            Pris = 10000m
                        });
                });

            modelBuilder.Entity("DataLayer.Entitys.Kunder", b =>
                {
                    b.Property<int>("KundeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KundeId");

                    b.ToTable("Kunders");

                    b.HasData(
                        new
                        {
                            KundeId = 1,
                            Navn = "U+1F46A"
                        },
                        new
                        {
                            KundeId = 2,
                            Navn = "U+1F491"
                        },
                        new
                        {
                            KundeId = 3,
                            Navn = "U+1F466"
                        });
                });

            modelBuilder.Entity("DataLayer.Entitys.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Navn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Penge")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataLayer.Entitys.UserDyr", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DyrId")
                        .HasColumnType("int");

                    b.Property<int?>("Antal")
                        .HasColumnType("int");

                    b.HasKey("UserId", "DyrId");

                    b.HasIndex("DyrId");

                    b.ToTable("UserDyrs");
                });

            modelBuilder.Entity("DataLayer.Entitys.UserKunder", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("KundeId")
                        .HasColumnType("int");

                    b.Property<int?>("Antal")
                        .HasColumnType("int");

                    b.Property<int?>("KunderKundeId")
                        .HasColumnType("int");

                    b.HasKey("UserID", "KundeId");

                    b.HasIndex("KunderKundeId");

                    b.ToTable("UserKunders");
                });

            modelBuilder.Entity("DataLayer.Entitys.UserDyr", b =>
                {
                    b.HasOne("DataLayer.Entitys.Dyr", "Dyr")
                        .WithMany("UserDyrs")
                        .HasForeignKey("DyrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entitys.User", "User")
                        .WithMany("userDyrs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Entitys.UserKunder", b =>
                {
                    b.HasOne("DataLayer.Entitys.Kunder", "Kunder")
                        .WithMany("UserKunders")
                        .HasForeignKey("KunderKundeId");

                    b.HasOne("DataLayer.Entitys.User", "User")
                        .WithMany("UserKunders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
